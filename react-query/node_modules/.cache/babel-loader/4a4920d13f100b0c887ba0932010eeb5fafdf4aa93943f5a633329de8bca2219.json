{"ast":null,"code":"import { handleResponse } from \"../common/FetchResponse\";\nimport { queryString } from \"../common/QueryString\";\nimport { SERVER_URL } from \"../env\";\nconst BOARD_API = {\n  boardList: async () => {\n    const baseURL = `${SERVER_URL}/boardList`;\n    const params = {};\n    const res = await fetch(queryString(baseURL, params), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return handleResponse(res);\n  },\n  board: async idx => {\n    const baseURL = `${SERVER_URL}/boardDetail`;\n    const params = {\n      idx\n    };\n    const res = await fetch(queryString(baseURL, params), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!res.ok) {\n      console.error(\"[ board ] : error\");\n      throw new Error('Network ERROR');\n    }\n    ;\n    return res.json();\n  },\n  createBoard: async board => {\n    const baseURL = `${SERVER_URL}/board`;\n    const res = await fetch(baseURL, {\n      method: \"POST\",\n      body: JSON.stringify(board)\n    });\n  }\n};\nexport default BOARD_API;","map":{"version":3,"names":["handleResponse","queryString","SERVER_URL","BOARD_API","boardList","baseURL","params","res","fetch","method","headers","board","idx","ok","console","error","Error","json","createBoard","body","JSON","stringify"],"sources":["/Users/bangjeonghan/Desktop/study/react/react-query/src/api/Board.js"],"sourcesContent":["import { handleResponse } from \"../common/FetchResponse\";\nimport { queryString } from \"../common/QueryString\";\nimport { SERVER_URL } from \"../env\"\n\n\nconst BOARD_API = {\n  boardList : async() => {\n\n    const baseURL = `${SERVER_URL}/boardList`;\n    const params = {\n    };\n\n    const res = await fetch(queryString(baseURL,params),\n    {\n      method : 'GET',\n      headers : {\n        'Content-Type' : 'application/json'\n      }\n    });\n\n    return handleResponse(res);\n  },\n\n  board : async(idx) => {\n    const baseURL = `${SERVER_URL}/boardDetail`;\n    const params = {\n      idx\n    };\n    const res = await fetch(queryString(baseURL,params),\n      {\n        method : 'GET',\n        headers : {\n          'Content-Type' : 'application/json'\n        }\n      });\n\n    if(!res.ok){\n      console.error(\"[ board ] : error\");\n      throw new Error('Network ERROR');\n    };\n    return res.json();\n  },\n\n  createBoard : async(board) => {\n    const baseURL = `${SERVER_URL}/board`;\n\n    const res = await fetch(baseURL,\n      {\n        method:\"POST\",\n        body: JSON.stringify(board)\n      })\n  },\n\n};\n\n\n\nexport default BOARD_API;"],"mappings":"AAAA,SAASA,cAAc,QAAQ,yBAAyB;AACxD,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,UAAU,QAAQ,QAAQ;AAGnC,MAAMC,SAAS,GAAG;EAChBC,SAAS,EAAG,MAAAA,CAAA,KAAW;IAErB,MAAMC,OAAO,GAAG,GAAGH,UAAU,YAAY;IACzC,MAAMI,MAAM,GAAG,CACf,CAAC;IAED,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACP,WAAW,CAACI,OAAO,EAACC,MAAM,CAAC,EACnD;MACEG,MAAM,EAAG,KAAK;MACdC,OAAO,EAAG;QACR,cAAc,EAAG;MACnB;IACF,CAAC,CAAC;IAEF,OAAOV,cAAc,CAACO,GAAG,CAAC;EAC5B,CAAC;EAEDI,KAAK,EAAG,MAAMC,GAAG,IAAK;IACpB,MAAMP,OAAO,GAAG,GAAGH,UAAU,cAAc;IAC3C,MAAMI,MAAM,GAAG;MACbM;IACF,CAAC;IACD,MAAML,GAAG,GAAG,MAAMC,KAAK,CAACP,WAAW,CAACI,OAAO,EAACC,MAAM,CAAC,EACjD;MACEG,MAAM,EAAG,KAAK;MACdC,OAAO,EAAG;QACR,cAAc,EAAG;MACnB;IACF,CAAC,CAAC;IAEJ,IAAG,CAACH,GAAG,CAACM,EAAE,EAAC;MACTC,OAAO,CAACC,KAAK,CAAC,mBAAmB,CAAC;MAClC,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;IAClC;IAAC;IACD,OAAOT,GAAG,CAACU,IAAI,CAAC,CAAC;EACnB,CAAC;EAEDC,WAAW,EAAG,MAAMP,KAAK,IAAK;IAC5B,MAAMN,OAAO,GAAG,GAAGH,UAAU,QAAQ;IAErC,MAAMK,GAAG,GAAG,MAAMC,KAAK,CAACH,OAAO,EAC7B;MACEI,MAAM,EAAC,MAAM;MACbU,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,KAAK;IAC5B,CAAC,CAAC;EACN;AAEF,CAAC;AAID,eAAeR,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}