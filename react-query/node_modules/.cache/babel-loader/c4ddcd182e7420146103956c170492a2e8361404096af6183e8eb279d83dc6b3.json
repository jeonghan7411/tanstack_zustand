{"ast":null,"code":"import create from 'zustand';\nimport { persist, devtools } from 'zustand/middleware';\n\n// const useUserStore = create(set => ({\n//   userData:[],\n//   setUserData: (data) => set({ userData : data}),\n//   selectedUserId: null,\n//   setSelectedUserId : (id) => set({ selectedUserId: id}),\n// }));\n\n// export default useUserStore;\n\nlet usersStore = set => ({\n  userData: [],\n  setUserData: data => set({\n    userData: data\n  }),\n  selectedUserId: null,\n  setSelectedUserId: id => set({\n    selectedUserId: id\n  })\n});\n\n// usersStore = devtools(usersStore);\n// usersStore = persist(usersStore, { list : 'userData'});\n\nexport const useUserStore = create(usersStore);","map":{"version":3,"names":["create","persist","devtools","usersStore","set","userData","setUserData","data","selectedUserId","setSelectedUserId","id","useUserStore"],"sources":["/Users/bangjeonghan/Desktop/study/react/react-query/src/store/useUserStore.js"],"sourcesContent":["import create from 'zustand';\nimport { persist, devtools } from 'zustand/middleware';\n\n// const useUserStore = create(set => ({\n//   userData:[],\n//   setUserData: (data) => set({ userData : data}),\n//   selectedUserId: null,\n//   setSelectedUserId : (id) => set({ selectedUserId: id}),\n// }));\n\n\n// export default useUserStore;\n\nlet usersStore = (set) => ({\n  userData:[],\n  setUserData: (data) => set({ userData : data}),\n  selectedUserId: null,\n  setSelectedUserId : (id) => set({ selectedUserId: id}),\n});\n\n// usersStore = devtools(usersStore);\n// usersStore = persist(usersStore, { list : 'userData'});\n\nexport const useUserStore = create(usersStore);"],"mappings":"AAAA,OAAOA,MAAM,MAAM,SAAS;AAC5B,SAASC,OAAO,EAAEC,QAAQ,QAAQ,oBAAoB;;AAEtD;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA,IAAIC,UAAU,GAAIC,GAAG,KAAM;EACzBC,QAAQ,EAAC,EAAE;EACXC,WAAW,EAAGC,IAAI,IAAKH,GAAG,CAAC;IAAEC,QAAQ,EAAGE;EAAI,CAAC,CAAC;EAC9CC,cAAc,EAAE,IAAI;EACpBC,iBAAiB,EAAIC,EAAE,IAAKN,GAAG,CAAC;IAAEI,cAAc,EAAEE;EAAE,CAAC;AACvD,CAAC,CAAC;;AAEF;AACA;;AAEA,OAAO,MAAMC,YAAY,GAAGX,MAAM,CAACG,UAAU,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}