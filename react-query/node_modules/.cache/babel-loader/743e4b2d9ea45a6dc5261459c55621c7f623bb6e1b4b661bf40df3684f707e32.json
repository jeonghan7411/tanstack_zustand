{"ast":null,"code":"var _jsxFileName = \"/Users/bangjeonghan/Desktop/study/react/react-query/src/App.js\",\n  _s = $RefreshSig$();\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const queryClient = useQueryClient();\n  const {\n    isPending,\n    error,\n    data\n  } = useQuery({\n    queryKey: ['todo'],\n    queryFn: async () => await fetch(`https://jsonplaceholder.typicode.com/users`).then(res => res.json())\n  });\n\n  // const { isPending, error, data } = useQuery({\n  //   queryKey: ['repoData'],\n  //   queryFn: () =>\n  //     fetch('https://api.github.com/repos/TanStack/query').then((res) =>\n  //       res.json(),\n  //     ),\n  // })\n\n  if (isPending) return 'Loading...';\n  if (error) return 'error...' + error;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dRKLsRjCmn37rBEV8n0mFavjJuU=\", false, function () {\n  return [useQueryClient, useQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useQuery","useQueryClient","jsxDEV","_jsxDEV","App","_s","queryClient","isPending","error","data","queryKey","queryFn","fetch","then","res","json","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bangjeonghan/Desktop/study/react/react-query/src/App.js"],"sourcesContent":["import { useQuery, useQueryClient } from '@tanstack/react-query';\nimport './App.css';\n\nfunction App() {\n\n  const queryClient = useQueryClient();\n  const { isPending, error, data } = useQuery({\n    queryKey: ['todo'],\n    queryFn : async ()=>\n      await fetch(`https://jsonplaceholder.typicode.com/users`).then((res)=>res.json())\n  });\n\n  // const { isPending, error, data } = useQuery({\n  //   queryKey: ['repoData'],\n  //   queryFn: () =>\n  //     fetch('https://api.github.com/repos/TanStack/query').then((res) =>\n  //       res.json(),\n  //     ),\n  // })\n  \n  if(isPending) return 'Loading...';\n\n  if(error) return 'error...' + error;\n\n  return (\n    <div className=\"App\">\n      {/* {data.map(user => (\n        <div key={user.id}>\n          <h2>{user.name}</h2>\n          <p>{user.email}</p>\n        </div>\n      ))} */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,cAAc,QAAQ,uBAAuB;AAChE,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAMC,WAAW,GAAGL,cAAc,CAAC,CAAC;EACpC,MAAM;IAAEM,SAAS;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGT,QAAQ,CAAC;IAC1CU,QAAQ,EAAE,CAAC,MAAM,CAAC;IAClBC,OAAO,EAAG,MAAAA,CAAA,KACR,MAAMC,KAAK,CAAC,4CAA4C,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAGA,GAAG,CAACC,IAAI,CAAC,CAAC;EACpF,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAGR,SAAS,EAAE,OAAO,YAAY;EAEjC,IAAGC,KAAK,EAAE,OAAO,UAAU,GAAGA,KAAK;EAEnC,oBACEL,OAAA;IAAKa,SAAS,EAAC;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAOf,CAAC;AAEV;AAACf,EAAA,CA/BQD,GAAG;EAAA,QAEUH,cAAc,EACCD,QAAQ;AAAA;AAAAqB,EAAA,GAHpCjB,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}