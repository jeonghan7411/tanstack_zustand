{"ast":null,"code":"import { SERVER_URL } from \"../env\";\nconst USER_API = {\n  users: async () => {\n    // const res = await fetch('https://jsonplaceholder.typicode.com/users');\n    const res = await fetch(`${SERVER_URL}/boardList`);\n    console.log(res);\n    if (!res.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return res.json();\n  },\n  user: async userId => {\n    const res = await fetch(`https://jsonplaceholder.typicode.com/users/${userId}`);\n    if (!res.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return res.json();\n  }\n};\nexport default USER_API;","map":{"version":3,"names":["SERVER_URL","USER_API","users","res","fetch","console","log","ok","Error","json","user","userId"],"sources":["/Users/bangjeonghan/Desktop/study/react/react-query/src/api/User.js"],"sourcesContent":["import { SERVER_URL } from \"../env\";\n\nconst USER_API = {\n  users: async () => {\n    // const res = await fetch('https://jsonplaceholder.typicode.com/users');\n    const res = await fetch(`${SERVER_URL}/boardList`);\n    console.log(res)\n    if (!res.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return res.json();\n  },\n\n  user: async (userId) => {\n    const res = await fetch(`https://jsonplaceholder.typicode.com/users/${userId}`);\n    if (!res.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return res.json();\n  }\n};\n\nexport default USER_API;\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,QAAQ;AAEnC,MAAMC,QAAQ,GAAG;EACfC,KAAK,EAAE,MAAAA,CAAA,KAAY;IACjB;IACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,UAAU,YAAY,CAAC;IAClDK,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;IAChB,IAAI,CAACA,GAAG,CAACI,EAAE,EAAE;MACX,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,OAAOL,GAAG,CAACM,IAAI,CAAC,CAAC;EACnB,CAAC;EAEDC,IAAI,EAAE,MAAOC,MAAM,IAAK;IACtB,MAAMR,GAAG,GAAG,MAAMC,KAAK,CAAC,8CAA8CO,MAAM,EAAE,CAAC;IAC/E,IAAI,CAACR,GAAG,CAACI,EAAE,EAAE;MACX,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,OAAOL,GAAG,CAACM,IAAI,CAAC,CAAC;EACnB;AACF,CAAC;AAED,eAAeR,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}