{"ast":null,"code":"var _jsxFileName = \"/Users/bangjeonghan/Desktop/study/react/react-query/src/App.js\";\nimport { useQuery } from '@tanstack/react-query';\nimport './App.css';\nimport USER_API from '../src/api/User'; // Adjust the path to where your API file is located\nimport UserList from './component/UserList';\nimport User from './component/User';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App({\n  userId\n}) {\n  // const { isLoading, error, data } = useQuery({\n  //   queryKey: ['user', userId],\n  //   queryFn: async () => {\n  //     const response = await fetch(USER_API.user(1));\n  //     if (!response.ok) {\n  //       throw new Error('Network response was not ok');\n  //     }\n  //     return response.json();\n  //   },\n  // });\n\n  // if (isLoading) return 'Loading...';\n\n  // if (error) return 'Error: ' + error.message;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"User\",\n    children: [/*#__PURE__*/_jsxDEV(UserList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useQuery","USER_API","UserList","User","jsxDEV","_jsxDEV","App","userId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bangjeonghan/Desktop/study/react/react-query/src/App.js"],"sourcesContent":["import { useQuery } from '@tanstack/react-query';\nimport './App.css';\nimport USER_API from '../src/api/User';  // Adjust the path to where your API file is located\nimport UserList from './component/UserList';\nimport User from './component/User';\n\nfunction App({ userId }) {\n  // const { isLoading, error, data } = useQuery({\n  //   queryKey: ['user', userId],\n  //   queryFn: async () => {\n  //     const response = await fetch(USER_API.user(1));\n  //     if (!response.ok) {\n  //       throw new Error('Network response was not ok');\n  //     }\n  //     return response.json();\n  //   },\n  // });\n\n  // if (isLoading) return 'Loading...';\n\n  // if (error) return 'Error: ' + error.message;\n\n  return (\n    <div className=\"User\">\n      <UserList />\n      <User />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,iBAAiB,CAAC,CAAE;AACzC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,IAAI,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,GAAGA,CAAC;EAAEC;AAAO,CAAC,EAAE;EACvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;;EAEA,oBACEF,OAAA;IAAKG,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBJ,OAAA,CAACH,QAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACZR,OAAA,CAACF,IAAI;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACC,EAAA,GAtBQR,GAAG;AAwBZ,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}